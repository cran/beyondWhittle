// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// pFromV
NumericVector pFromV(NumericVector v);
RcppExport SEXP _beyondWhittle_pFromV(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(pFromV(v));
    return rcpp_result_gen;
END_RCPP
}
// vFromP
NumericVector vFromP(NumericVector p, const double eps);
RcppExport SEXP _beyondWhittle_vFromP(SEXP pSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(vFromP(p, eps));
    return rcpp_result_gen;
END_RCPP
}
// mixtureWeight
NumericVector mixtureWeight(NumericVector p, NumericVector w, unsigned k);
RcppExport SEXP _beyondWhittle_mixtureWeight(SEXP pSEXP, SEXP wSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< unsigned >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mixtureWeight(p, w, k));
    return rcpp_result_gen;
END_RCPP
}
// densityMixture
NumericVector densityMixture(NumericVector weights, NumericMatrix densities);
RcppExport SEXP _beyondWhittle_densityMixture(SEXP weightsSEXP, SEXP densitiesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type densities(densitiesSEXP);
    rcpp_result_gen = Rcpp::wrap(densityMixture(weights, densities));
    return rcpp_result_gen;
END_RCPP
}
// unrollPsd
NumericVector unrollPsd(NumericVector qPsd, unsigned n);
RcppExport SEXP _beyondWhittle_unrollPsd(SEXP qPsdSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type qPsd(qPsdSEXP);
    Rcpp::traits::input_parameter< unsigned >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(unrollPsd(qPsd, n));
    return rcpp_result_gen;
END_RCPP
}
// genEpsMAC
NumericVector genEpsMAC(NumericVector zt, NumericVector ma);
RcppExport SEXP _beyondWhittle_genEpsMAC(SEXP ztSEXP, SEXP maSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type zt(ztSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ma(maSEXP);
    rcpp_result_gen = Rcpp::wrap(genEpsMAC(zt, ma));
    return rcpp_result_gen;
END_RCPP
}
// pacf2ARacv
double pacf2ARacv(NumericVector pacf, double sigma2);
RcppExport SEXP _beyondWhittle_pacf2ARacv(SEXP pacfSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pacf(pacfSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(pacf2ARacv(pacf, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// pacf2AR
NumericMatrix pacf2AR(NumericVector pacf);
RcppExport SEXP _beyondWhittle_pacf2AR(SEXP pacfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pacf(pacfSEXP);
    rcpp_result_gen = Rcpp::wrap(pacf2AR(pacf));
    return rcpp_result_gen;
END_RCPP
}
// genEpsARC
NumericVector genEpsARC(NumericVector zt, NumericVector ar);
RcppExport SEXP _beyondWhittle_genEpsARC(SEXP ztSEXP, SEXP arSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type zt(ztSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ar(arSEXP);
    rcpp_result_gen = Rcpp::wrap(genEpsARC(zt, ar));
    return rcpp_result_gen;
END_RCPP
}
// genEpsARMAC
NumericVector genEpsARMAC(NumericVector zt, NumericVector ar, NumericVector ma);
RcppExport SEXP _beyondWhittle_genEpsARMAC(SEXP ztSEXP, SEXP arSEXP, SEXP maSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type zt(ztSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ar(arSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ma(maSEXP);
    rcpp_result_gen = Rcpp::wrap(genEpsARMAC(zt, ar, ma));
    return rcpp_result_gen;
END_RCPP
}
// psd_arma
NumericVector psd_arma(NumericVector freq, NumericVector ar, NumericVector ma, double sigma2);
RcppExport SEXP _beyondWhittle_psd_arma(SEXP freqSEXP, SEXP arSEXP, SEXP maSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type freq(freqSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ar(arSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ma(maSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(psd_arma(freq, ar, ma, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// acvMatrix
NumericMatrix acvMatrix(NumericVector acv);
RcppExport SEXP _beyondWhittle_acvMatrix(SEXP acvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type acv(acvSEXP);
    rcpp_result_gen = Rcpp::wrap(acvMatrix(acv));
    return rcpp_result_gen;
END_RCPP
}
// acceptanceRate
double acceptanceRate(NumericVector trace);
RcppExport SEXP _beyondWhittle_acceptanceRate(SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(acceptanceRate(trace));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_beyondWhittle_pFromV", (DL_FUNC) &_beyondWhittle_pFromV, 1},
    {"_beyondWhittle_vFromP", (DL_FUNC) &_beyondWhittle_vFromP, 2},
    {"_beyondWhittle_mixtureWeight", (DL_FUNC) &_beyondWhittle_mixtureWeight, 3},
    {"_beyondWhittle_densityMixture", (DL_FUNC) &_beyondWhittle_densityMixture, 2},
    {"_beyondWhittle_unrollPsd", (DL_FUNC) &_beyondWhittle_unrollPsd, 2},
    {"_beyondWhittle_genEpsMAC", (DL_FUNC) &_beyondWhittle_genEpsMAC, 2},
    {"_beyondWhittle_pacf2ARacv", (DL_FUNC) &_beyondWhittle_pacf2ARacv, 2},
    {"_beyondWhittle_pacf2AR", (DL_FUNC) &_beyondWhittle_pacf2AR, 1},
    {"_beyondWhittle_genEpsARC", (DL_FUNC) &_beyondWhittle_genEpsARC, 2},
    {"_beyondWhittle_genEpsARMAC", (DL_FUNC) &_beyondWhittle_genEpsARMAC, 3},
    {"_beyondWhittle_psd_arma", (DL_FUNC) &_beyondWhittle_psd_arma, 4},
    {"_beyondWhittle_acvMatrix", (DL_FUNC) &_beyondWhittle_acvMatrix, 1},
    {"_beyondWhittle_acceptanceRate", (DL_FUNC) &_beyondWhittle_acceptanceRate, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_beyondWhittle(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
